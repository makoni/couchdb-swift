@Tutorial(time: 15) {
    @Intro(title: "Using CouchDBClient with Vapor in a Server-Side App") {
        Learn how to use CouchDBClient for developing server-side apps built with Vapor.
        
        @Image(source: curlybraces.square.fill.svg, alt: "CouchDBClient and Vapor integration illustration")
    }
    
    @Section(title: "Integrating CouchDBClient with Vapor") {
        @ContentAndMedia {
            Vapor is built on top of Apple's [SwiftNIO](https://github.com/apple/swift-nio). `CouchDBClient` is fully compatible with SwiftNIO and can be seamlessly used for server-side development.
            
            @Image(source: vapor.svg, alt: "Vapor framework logo")
        }
        
        @Steps {
            @Step {
                Open the `Package.swift` file in your Vapor project.
                
                @Code(name: "Package.swift", file: VaporTutorial-package-1.swift)
            }

            @Step {
                Add `CouchDBClient` as a Swift Package dependency.
                
                @Code(name: "Package.swift", file: VaporTutorial-package-2.swift)
            }
            
            @Step {
                Open the `routes.swift` file in your Vapor project.
                
                @Code(name: "routes.swift", file: VaporTutorial-1.swift)
            }
            
            @Step {
                Import `CouchDBClient` and create a client instance.
                
                @Code(name: "routes.swift", file: VaporTutorial-2.swift)
            }
            
            @Step {
                Define your data model for CouchDB documents. Use the `RowsResponse` model from the `CouchDBClient` library to parse CouchDB responses.
                
                @Code(name: "routes.swift", file: VaporTutorial-3.swift)
            }
            
            @Step {
                Retrieve a document from a database. This example uses a `CouchDB View` to find the document by the `url` field. The map function requires a `key` parameter, which is `appUrl` in this case.
                
                @Code(name: "routes.swift", file: VaporTutorial-4.swift)
            }
            
            @Step {
                Parse the response into your data model.
                
                @Code(name: "routes.swift", file: VaporTutorial-5.swift)
            }
            
            @Step {
                Finally, pass the data to Leaf for template rendering.
                
                @Code(name: "routes.swift", file: VaporTutorial-6.swift)
            }
        }
    }
}
